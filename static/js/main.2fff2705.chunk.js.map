{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","number","name","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","contactForm","type","onChange","pattern","title","required","button","Component","ContactList","contacts","OnDeleteContact","contactList","map","id","contactItem","contactName","contactNumber","contactButton","onClick","Filter","filter","filterInput","App","addContact","some","contact","toLowerCase","alert","newContact","uuid","deleteContact","prevState","changeFilter","filterContacts","normalizeFilter","includes","contactsStorage","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fff2705.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__mmFtp\",\"contactItem\":\"ContactList_contactItem__3rLx1\",\"contactName\":\"ContactList_contactName__2PBza\",\"contactNumber\":\"ContactList_contactNumber__24QBk\",\"contactButton\":\"ContactList_contactButton__Atwhq\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    number: \"\",\r\n    name: \"\",\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.contactForm}>\r\n        <div>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className={s.button}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts, OnDeleteContact }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <span className={s.contactName}>{name}</span>\r\n          <span className={s.contactNumber}>{number}</span>\r\n          <button\r\n            className={s.contactButton}\r\n            type=\"button\"\r\n            onClick={() => OnDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ onChange }) {\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n        className={s.filterInput}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport { Component } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nimport { v1 as uuid } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contactsStorage = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contactsStorage) {\n      this.setState({ contacts: contactsStorage });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (\n      this.state.contacts.some(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = {\n        id: uuid(),\n        name,\n        number,\n      };\n      this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const normalizeFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <div className=\"countainer\">\n          <h2>Contacts</h2>\n          <Filter onChange={this.changeFilter} />\n          <ContactList\n            contacts={this.filterContacts()}\n            OnDeleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3-945\",\"contactForm\":\"ContactForm_contactForm__1sXCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3VmCz\"};"],"sourceRoot":""}